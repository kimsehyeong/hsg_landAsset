package hsgLandAsset.admin.minwon.service;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONObject;
import org.json.XML;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.gpki.gpkiapi.GpkiApi;

import hsgLandAsset.admin.vo.MinwonVO;
import hsgLandAsset.admin.vo.PageVO;

@Service
public class EminwonService {
	
	@Autowired
	GPKIService gpkiService;
	
	@Value("${dev.mode}")
	boolean dev;
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	
	final String charset = "utf-8";
	final String srcorgcd = "4260003"; //요청기관코드
	final String tgtorgcd = "4260003"; //응답기관코드
	final String cggCode = "9999999";
	final String depCode = "42610190000"; //토지재산과

	
	@Autowired
	AdminMinwonMapper mapper;
	
	
	
	
	public List<Map<String, String>> getMinwonList(MinwonVO minwonVO) throws Exception {
		List<Map<String, String>> list = new ArrayList<Map<String, String>>();
		
		String ifID = "SOWNN00245"; //연계ID
		String addr = "http://152.99.149.16:80/stmr/websvc/std/ws?wsdl="+ifID;
		String resString;
		
		if(minwonVO.getIn_mw_take_no()==null) minwonVO.setIn_mw_take_no("");
		if(minwonVO.getIn_mw_aplr_nm()==null) minwonVO.setIn_mw_aplr_nm("");
		if(minwonVO.getUser_name()==null) minwonVO.setUser_name("");
		
		
		Calendar cal = Calendar.getInstance();

		if (!StringUtils.hasText(minwonVO.getEndDate()))
			minwonVO.setEndDate(sdf.format(cal.getTime()));
		if (!StringUtils.hasText(minwonVO.getStartDate())) {
			cal.add(Calendar.DAY_OF_YEAR, -7);
			minwonVO.setStartDate(sdf.format(cal.getTime()));
		}
		
		String arr = "''";
		if(StringUtils.hasText(minwonVO.getProgress()) || StringUtils.hasText(minwonVO.getProgress2()) || StringUtils.hasText(minwonVO.getAnswer())) {
			Map<String, String> map = new HashMap<String, String>();
			map.put("startDate", minwonVO.getStartDate().replaceAll("-", ""));
			map.put("endDate", minwonVO.getEndDate().replaceAll("-", ""));
			
			map.put("progress", minwonVO.getProgress());
			map.put("progress2", minwonVO.getProgress2());
			map.put("answer", minwonVO.getAnswer());
			
			List<Map<String, Object>> li = mapper.getRegisterNoBySearch(map);
			for(Map<String, Object> item : li) {
				arr += ",'"+item.get("register_no").toString()+"'";
			}
		}
		
		try {
			
			if(dev) GpkiApi.init("C:/gpki/lic/");
			
			String condition1 = "";
			String condition2 = "";
			
			condition1 = condition1 + "t1.main_deal_dep_code=" + depCode;
			
			//민원번호
			if(StringUtils.hasText(minwonVO.getIn_mw_take_no())) condition1 = condition1 + " and t1.mw_take_no like '%"+minwonVO.getIn_mw_take_no()+"%'";
			//민원명
			if(StringUtils.hasText(minwonVO.getMw_afr_shtnm())) condition1 += " and t4.mw_afr_shtnm like '%"+minwonVO.getMw_afr_shtnm()+"%'";
			//민원인 전화번호
			if(StringUtils.hasText(minwonVO.getMw_aplct_hpno())) condition1 += "and t1.mw_aplct_hpno like '%"+minwonVO.getMw_aplct_hpno()+"%'";
			//담당자
			if(StringUtils.hasText(minwonVO.getUser_name())) condition1 += " and t1.dpp_id in (select user_id from ssov_user where user_name like '%" + minwonVO.getUser_name()+"%')"; //담당자
			//처리사항
			if(StringUtils.hasText(minwonVO.getDeal_se())) condition1 += " and t1.deal_se = '"+minwonVO.getDeal_se()+"'"; 
			
			
			if(StringUtils.hasText(minwonVO.getProgress()) || StringUtils.hasText(minwonVO.getProgress2()) || StringUtils.hasText(minwonVO.getAnswer())) condition2 += "t1.mw_take_no in ("+arr+") ";
			
			
			//System.out.println("condition1 = " + condition1);
			//System.out.println("condition2 = " + condition2);
			
			String message = "<message>";
			message = message + "<body>";
			message = message + "<in_take_symd>" + minwonVO.getStartDate().replaceAll("-", "") + "</in_take_symd>";
			message = message + "<in_take_eymd>" + minwonVO.getEndDate().replaceAll("-", "") + "</in_take_eymd>";
			message = message + "<query_real_deal_ymd_from></query_real_deal_ymd_from>";
			message = message + "<query_real_deal_ymd_to></query_real_deal_ymd_to>";
			message = message + "<in_take_cgg_code>" + cggCode + "</in_take_cgg_code>";
			message = message + "<in_take_dep_code></in_take_dep_code>";
			message = message + "<in_mw_take_no></in_mw_take_no>";
			message = message + "<in_mw_aplr_nm>" + (StringUtils.hasText(minwonVO.getIn_mw_aplr_nm())? minwonVO.getIn_mw_aplr_nm():"") + "</in_mw_aplr_nm>";
			message = message + "<in_mw_se></in_mw_se>";
			
			message = message + "<in_condition>"+condition1 + "</in_condition>";
			message = message + "<in_condition2>"+condition2 + "</in_condition2>";
			
			message = message + "<page_yn>Y</page_yn>";
			message = message + "<from>"+(minwonVO.getListSize()*(minwonVO.getPage()-1) + 1)+"</from>";
			message = message + "<to>"+(minwonVO.getListSize()*minwonVO.getPage())+"</to>";
			message = message + "<mw_if_sys_id></mw_if_sys_id>";
			message = message + "</body>";
			message = message + "</message>";
			
			
			if(dev) {
				resString = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><env:Envelope xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><env:Body><DOCUMENT><IFID>SOWNN00245</IFID><SRCORGCD>4260003</SRCORGCD><TGTORGCD>4260003</TGTORGCD><RESULTCODE>200</RESULTCODE><MSGKEY>20210318160340385111314461</MSGKEY><DATA></DATA></DOCUMENT></env:Body></env:Envelope>";
				//resString = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><env:Envelope xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><env:Body><DOCUMENT><IFID>SOWNN00245</IFID><SRCORGCD>4260003</SRCORGCD><TGTORGCD>4260003</TGTORGCD><RESULTCODE>200</RESULTCODE><MSGKEY>20230621104135665241670163</MSGKEY><DATA></DATA></DOCUMENT></env:Body></env:Envelope>";
				resString = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><env:Envelope xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><env:Body><DOCUMENT><IFID>SOWNN00245</IFID><SRCORGCD>4260003</SRCORGCD><TGTORGCD>4260003</TGTORGCD><RESULTCODE>200</RESULTCODE><MSGKEY>20230621104935615952882100</MSGKEY><DATA></DATA></DOCUMENT></env:Body></env:Envelope>";
			}else {
				// 암호화
				byte[] encryptedData = gpkiService.encrypt(message.getBytes("EUC-KR") , "4260000004");
				String encodeMessage = gpkiService.getBASE64String(encryptedData);
				
				String msgkey = getMsgKey();
				String reqSoap = makeReqSoap(ifID, srcorgcd, tgtorgcd, msgkey, encodeMessage);
				resString = sendHttpRequest(addr, reqSoap, charset, ifID);
			}
			
			/*
			System.out.println("========================================================");
			System.out.println("message => \n" + message);
			System.out.println("========================================================");
			
			System.out.println("========================================================");
			System.out.println("resSoap => \n" + resString);
			System.out.println("========================================================");
			*/
			
			JSONObject obj = XML.toJSONObject(resString);
			JSONObject envelop = obj.getJSONObject("env:Envelope");
			JSONObject envBody = envelop.getJSONObject("env:Body");
			JSONObject doc = envBody.getJSONObject("DOCUMENT");
			String resSoap = doc.getString("DATA");
			
			
			// 복호화
			byte[] decodedData = gpkiService.getDataFromBASE64(resSoap);
			String decodeMessage = new String(gpkiService.decrypt(decodedData), "EUC-KR");
			
			JSONObject xml = XML.toJSONObject(decodeMessage);
			JSONObject msg = xml.getJSONObject("message");
			//System.out.println("decodeMessage => \n" + msg.toString());
			
			if(msg.has("body") && msg.get("body") instanceof JSONObject) {
				JSONObject body = msg.getJSONObject("body");
				
				JSONArray ja = new JSONArray();
				
				if(body.get("list") instanceof JSONObject) {
					JSONObject j = body.getJSONObject("list");
					ja.put(j);
				}else if(body.get("list") instanceof JSONArray) {
					ja = body.getJSONArray("list");
				}
				
				for(int i=0; i<ja.length(); i++) {
					JSONObject j = ja.getJSONObject(i);
					int cnt = j.getInt("cnt");
					minwonVO.setPageVO(new PageVO(minwonVO.getListSize(), minwonVO.getPage(), cnt));
					break;
				}
				
				list = new Gson().fromJson(ja.toString(), new TypeToken<List<HashMap<String, String>>>(){}.getType());
				
				for (Map<String, String> item : list) {
					if(minwonVO.isTemp()) {
						mapper.insertMinwon(item);
					}else {
						Map<String, Object> result = mapper.getCommentStatus(item);
						item.put("consult", result.get("consult").toString());
						item.put("answered", result.get("answered").toString());
						item.put("progress", result.get("progress").toString());
						item.put("progress2", result.get("progress2").toString());
					}
				}
				
				
			}
			
		}catch(Exception ex) {
			ex.printStackTrace();
		}
		
		return list;
		
	}
	
	
	public Map<String, String> getMinwon(String mw_take_no){
		Map<String, String> result = new HashMap<String, String>();
		
		String ifID = "SOINN00034"; //연계ID
		String addr = "http://152.99.149.16:80/stmr/websvc/std/ws?wsdl="+ifID;
		String resString;
		
		try {
		
			String message = "<message>";
			message = message + "<body>";
			message = message + "<mw_take_no>" + mw_take_no + "</mw_take_no>";
			message = message + "</body>";
			message = message + "</message>";
			
			if(dev) {
				resString = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><env:Envelope xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><env:Body><DOCUMENT><IFID>SOINN00034</IFID><SRCORGCD>4260003</SRCORGCD><TGTORGCD>4260003</TGTORGCD><RESULTCODE>200</RESULTCODE><MSGKEY>20210317172530399984373627</MSGKEY><DATA>MIIELgIBADGCAYQwggGAAgEAMGgwUDELMAkGA1UEBhMCS1IxHDAaBgNVBAoME0dvdmVybm1lbnQgb2YgS29yZWExDTALBgNVBAsMBEdQS0kxFDASBgNVBAMMC0NBMTMxMTAwMDAxAhRSl6oOUgl8TFAYr8mnuJITAHNZ8zANBgkqhkiG9w0BAQcwAASCAQCJtSIv3Mcsl60P1LvOG4zcVso2ytvDmxcnZaW3C8NdzcAvrgfeuq6I/b8hQTa/KrJyr7OSWd5CCrfcxlXo6GAbViSfiylRgLQWT0N4iCuJQ62Sbw0w+lGbjPjCA2A+IZ/LCTTxnjPhJvtcYjTZviAlic90c3zoMJTcYxi6k4Gbz2D1Ct+TRWqtXlQ/ESb+25yAqctnL6rMaVqWV50SE+bOoO3jHMfXorXCrFosYjFDqGrElh1HnPMW8bvGvoMi3OHbJY0UEYyMAoWiDKEwFV3AkPaJIQ+ADSl2jJJkx8t0O+jjqZ/JZELeX7bCMaE8FMgnf+I9n5qhf3RSnAk6TROqMIICnwYJKoZIhvcNAQcBMB4GCiqDGoyaRAVkAgEEEEHqecVYNNJ+EjrLPq7Olr6AggJwZds9y5lbzHBp15R4W6C3OvVpTzIKx87+76SgFwDUF5eK87EpSFBv8os40irJPWXGi8LD0r3GN8gtMDdsfVwmnIGYOvSHShkl/xOJ/06HEIWZDQsJxBEgjZ+7I2w5LtVe1kjnuwEq3ZIwXIQZbRV1hxPXBV9XHEfFl8t5CPEl2OLI4nY4rd5rQd8iDFf6gLPpmOKKNlNPeN2ItkGBf8o+lX5Mn+xokRTomuT8aUrHue0ehYG0vt5iT6TQLIzfsWOjDvP2SS1kjoOanactODNdd1AZqEiIoNAH2evt9hcE0UTdFH1hBXB7qWRuwS4ilvD0fDFgRQkFxFmfd7CBMF1VjZwpodjxrkQTFZPcnUCygcelY/zG/AdoRcJ7LcMY+sD4yZNqui2mabPOgfsFZ3FNOynLEKEvaudSrVtcSv32a6I3E8onuZEHHGWGEmyhLl6wawtdqKSXWVCgRdEIvBjShw3H6zO5rJ54s/RWt//FK+hodm4Wojbn311LmA3Lr7joTdzHiqAf+ksql6xhOk2l28Kb9bS7NXiEEoWT2UajhdkNfduw1r2my9+uRiVr+LelDrR4Hus94hwlJny0rG23JxnP9+lHPREwMgKdp5oF37CSwFkIBT7xXXeumMNsfuVFb1coAUJ9C+uEO3dj65Y39DvUk8SCx9RDD1p1zEJhvG1LLs4L7Az6jljP7mVLql8YRPb8BOm4xJn/sWC8BuVSM3Lk7MmmJzPHb70qSHLqokQdTey1tSYWcQ/L5vikACFuz6oMrnaL7ljOn11gHZGG1efmrdW9UoG1YiyntmC2UQ+wCRArkM5sQNWqFz70ciii</DATA></DOCUMENT></env:Body></env:Envelope>";
			}else {
				// 암호화
				byte[] encryptedData = gpkiService.encrypt(message.getBytes("EUC-KR") , "4260000004");
				String encodeMessage = gpkiService.getBASE64String(encryptedData);
				
				String msgkey = getMsgKey();
				String reqSoap = makeReqSoap(ifID, srcorgcd, tgtorgcd, msgkey, encodeMessage);
				resString = sendHttpRequest(addr, reqSoap, charset, ifID);
			}
			
			//System.out.println("========================================================");
			//System.out.println("resSoap => \n" + resString);
			//System.out.println("========================================================");
			
			JSONObject obj = XML.toJSONObject(resString);
			JSONObject envelop = obj.getJSONObject("env:Envelope");
			JSONObject envBody = envelop.getJSONObject("env:Body");
			JSONObject doc = envBody.getJSONObject("DOCUMENT");
			String resSoap = doc.getString("DATA");
			
			// 복호화
			byte[] decodedData = gpkiService.getDataFromBASE64(resSoap);
			String decodeMessage = new String(gpkiService.decrypt(decodedData), "EUC-KR");
			
			JSONObject msg = XML.toJSONObject(decodeMessage);
			JSONObject list = msg.getJSONObject("message").getJSONObject("body").getJSONObject("list");
			
			result = new Gson().fromJson(list.toString(), new TypeToken<Map<String, String>>(){}.getType());
			
		}catch(Exception ex) {
			ex.printStackTrace();
		}
		
		return result;
	}
	
	
	public List<Map<String, String>> getMinwonProgress(String mw_take_no){
		List<Map<String, String>> list = new ArrayList<Map<String, String>>();
		
		String ifID = "SOINN00040"; //연계ID
		String addr = "http://152.99.149.16:80/stmr/websvc/std/ws?wsdl="+ifID;
		String resString;
		
		try {
		
			String message = "<message>";
			message = message + "<body>";
			message = message + "<mw_take_no>" + mw_take_no + "</mw_take_no>";
			message = message + "</body>";
			message = message + "</message>";
			
			if(dev) {
				resString = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><env:Envelope xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><env:Body><DOCUMENT><IFID>SOINN00040</IFID><SRCORGCD>4260003</SRCORGCD><TGTORGCD>4260003</TGTORGCD><RESULTCODE>200</RESULTCODE><MSGKEY>20210318140304373254003979</MSGKEY><DATA>MIIDfgIBADGCAYQwggGAAgEAMGgwUDELMAkGA1UEBhMCS1IxHDAaBgNVBAoME0dvdmVybm1lbnQgb2YgS29yZWExDTALBgNVBAsMBEdQS0kxFDASBgNVBAMMC0NBMTMxMTAwMDAxAhRSl6oOUgl8TFAYr8mnuJITAHNZ8zANBgkqhkiG9w0BAQcwAASCAQCsQag9M4fI/j0qJy1B0bE3oeinDksW2Szi1URCydHLb3kZ3jCjU+BJjdRTxbbCDd7d/3X8LxfwNc0oAge2ZTsAd+9i+mwedkZ9VJ39QHWdgVMWpmADp2kEQUZ3pdivq6MOgAhzXCW4azOliu9kf8idzn+Wf/Ww/vteTejDufBGU/yrvDZS4/cNHAaPqFgGgtUvuhYZi2Br6TM3atXOH//+T3xuAI/WUdMy9yfhjCUqTC+SwMlvBkz0I82gH/Sp9F8N2YtEe7TymwdrkTMJoCukyB5xl7QkwrmFCRC1lAdCb7sepyUY3C/3BXArYWkQewT8TSzo2Sz1LcJ0h/7jHZvoMIIB7wYJKoZIhvcNAQcBMB4GCiqDGoyaRAVkAgEEEDVymymyE1ln9Zhc0MgA1GKAggHAKP0Bb6QlskidBkR18ezUhq1iZWrVD7LIhL7suOHUZZxaPOR4MYodLnl0X0vRIpMmCVusHRKLxOX6RerM2Oxw8o0eLj2YczKKkN9qppMJjwMVTpkq+uQuz0gINTTlERWs0sAohJcUQvr77L39FjpuHyGKHPxeHcpT358O3iQ1TPyI0wjoIqOmwTanP1V3CSg5WqX7GFoLfTLk5Z8OAtPwr1Rtm660cJikXrbWtlVHabCswoNO47nA56l2ccvn5hjfFEv7nL+iTfapk1F7RWVHooaUfSzoYoOZLhHaX/EJpxmTqEwz1Wd1UqXL3x0r2E3BM5bR6tyL3ThjdBRCPMmuaXtHozE2giRKZkOkA0Kpwc/SJilbTzQ8rsFmDrC26fbHfLw4cjdLYYvWIGFTHu7FpylxTNo+pXnBpYtwNcVzrbQvuyzT/0ritLj/LAOAttkbgc7fiXYazHgjrqm/MweCfiLkiwZYhZWXE9RdUNwVTh0bCrqAH99FANODfGOqf7sPS4DQkIGCiBULCJSI0TeBe1J/Kjg9KppTV7O1/vq9Pv7sQNy0PJasaNYwlgPSuFzvmN0gQfqdJPtobmoNiu1M2w==</DATA></DOCUMENT></env:Body></env:Envelope>";
			}else {
				// 암호화
				byte[] encryptedData = gpkiService.encrypt(message.getBytes("EUC-KR") , "4260000004");
				String encodeMessage = gpkiService.getBASE64String(encryptedData);
				
				String msgkey = getMsgKey();
				String reqSoap = makeReqSoap(ifID, srcorgcd, tgtorgcd, msgkey, encodeMessage);
				resString = sendHttpRequest(addr, reqSoap, charset, ifID);
			}
			
			//System.out.println("========================================================");
			//System.out.println("resSoap => \n" + resString);
			//System.out.println("========================================================");
			
			JSONObject obj = XML.toJSONObject(resString);
			JSONObject envelop = obj.getJSONObject("env:Envelope");
			JSONObject envBody = envelop.getJSONObject("env:Body");
			JSONObject doc = envBody.getJSONObject("DOCUMENT");
			String resSoap = doc.getString("DATA");
			
			// 복호화
			byte[] decodedData = gpkiService.getDataFromBASE64(resSoap);
			String decodeMessage = new String(gpkiService.decrypt(decodedData), "EUC-KR");
			
			JSONObject xml = XML.toJSONObject(decodeMessage);
			JSONObject msg = xml.getJSONObject("message");
			
			if(msg.has("body") && msg.get("body") instanceof JSONObject) {
				JSONObject body = msg.getJSONObject("body");
				
				JSONArray ja = new JSONArray();
				
				if(body.get("list") instanceof JSONObject) {
					JSONObject j = body.getJSONObject("list");
					ja.put(j);
				}else if(body.get("list") instanceof JSONArray) {
					ja = body.getJSONArray("list");
				}
				list = new Gson().fromJson(ja.toString(), new TypeToken<List<HashMap<String, String>>>(){}.getType());
			}
			
		}catch(Exception ex) {
			ex.printStackTrace();
		}
		
		return list;
	}
	
	
	
	
	
	
	public String sendHttpRequest(String addr, String reqSoap, String charset, String soapAction) throws Exception {
		
		OutputStream os = null;
		BufferedWriter out = null;
		InputStreamReader is = null;
		BufferedReader bf = null;
		StringBuffer response = null;
		HttpURLConnection connection = null;
		
		try {
			URL _url = new URL(addr);
			connection = (HttpURLConnection)_url.openConnection();
			
			connection.setRequestMethod("POST");
			connection.setDoOutput(true);
			connection.setDoInput(true);;
			connection.setUseCaches(false);
			connection.setDefaultUseCaches(false);
			connection.setRequestProperty("Content-Type", "text/xml; charset=" + charset);
			connection.setRequestProperty("Accept", "application/soap+xml, application/dime, multipart/related, text/*");
			connection.setRequestProperty("SOAPAction", soapAction);
			
			os = connection.getOutputStream();
			out = new BufferedWriter(new OutputStreamWriter(os, charset));
			out.write(reqSoap);
			out.close();
			
			
			int responseCode = connection.getResponseCode();
			String responseMessage = connection.getResponseMessage();
			if(connection.getErrorStream()!=null) {
				InputStreamReader eis = new InputStreamReader(connection.getErrorStream(), charset);
				bf = new BufferedReader(eis);
				response = new StringBuffer();
				String errorMessage;
				
				while((errorMessage = bf.readLine())!=null) {
					response.append(errorMessage);
				}
				
			}
			
			/*System.out.println("=================================================");
			System.out.println("responseCode = " + responseCode);
			System.out.println("responseMessage = " + responseMessage);
			if(connection.getErrorStream()!=null) System.out.println("errorMessage = " + response.toString());
			System.out.println("=================================================");*/
			
			is = new InputStreamReader(connection.getInputStream(), charset);
			bf = new BufferedReader(is);
			response = new StringBuffer();
			String responsetemp;
			
			while((responsetemp = bf.readLine())!=null) {
				response.append(responsetemp);
			}
			bf.close();
			
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			if(is != null) is.close();
			if(os != null) os.close();
			if(bf != null) bf.close();
			if(out != null) out.close();
			if(connection != null) connection = null;
		}
		
		return response.toString();
	}
	
	public String getMsgKey() {
		Date d = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmssMS");
		return sdf.format(d)+String.valueOf(Math.random()).substring(2, 10);
	}

	public String makeReqSoap(String ifid, String srcorgcd, String tgtorgcd, String msgkey, String message) throws Exception {
		
		StringBuffer sb = new StringBuffer();
		sb.append("<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">");;
		sb.append("<soapenv:Header/>");
		sb.append("<soapenv:Body>");
		sb.append("<DOCUMENT>");
		sb.append("<IFID>"+ifid+"</IFID>");
		sb.append("<SRCORGCD>"+srcorgcd+"</SRCORGCD>");
		sb.append("<TGTORGCD>"+tgtorgcd+"</TGTORGCD>");
		sb.append("<RESULTCODE>000</RESULTCODE>");
		sb.append("<MSGKEY>"+msgkey+"</MSGKEY>");
		sb.append("<DATA>");
		sb.append(message);
		sb.append("</DATA>");
		sb.append("</DOCUMENT>");
		sb.append("</soapenv:Body>");
		sb.append("</soapenv:Envelope>");
		
		return sb.toString();
	}
	


}
